----- Tarea Clase 1 ------


--- 1 Mostrar todos los productos dentro de la categoria electro junto con todos los detalles.

select * from stg.product_master
Where categoria ='Electro'

--- 2 Cuales son los producto producidos en China?

select distinct(nombre),origen
from stg.product_master
Where origen = 'China'
order by nombre

--- 3 Mostrar todos los productos de Electro ordenados por nombre.

select distinct(nombre), categoria
from stg.product_master
Where categoria ='Electro'
Order by nombre

--- 4 Cuales son las TV que se encuentran activas para la venta?

select distinct(nombre),is_active
from stg.product_master
where subcategoria ='TV' and is_active ='true'

--- 5 Mostrar todas las tiendas de Argentina ordenadas por fecha de apertura de las mas antigua a la mas nueva.

select codigo_tienda,pais,fecha_apertura
from stg.store_master
where pais ='Argentina'
order by fecha_apertura asc

--- 6 Cuales fueron las ultimas 5 ordenes de ventas?

select orden,fecha
from stg.order_line_sale
order by fecha desc
limit 5

--- 7 Mostrar los primeros 10 registros de el conteo de trafico por Super store ordenados por fecha. 

select *
from stg.super_store_count
order by fecha desc
limit 10

--- 8 Cuales son los producto de electro que no son Soporte de TV ni control remoto.

select nombre,categoria,subsubcategoria
from stg.product_master
where categoria = 'Electro' and subsubcategoria not in ('Control remoto', 'Soporte')

---9 Mostrar todas las lineas de venta donde el monto sea mayor a $100.000 solo para transacciones en pesos.

select *
from stg.order_line_sale
where venta >100000 and moneda = 'ARS'

--10 Mostrar todas las lineas de ventas de Octubre 2022

select *
from stg.order_line_sale
where fecha <'2022-11-01'and fecha > '2022-10-01'
 
--- 11 Mostrar todos los productos que tengan EAN.

select codigo_producto,nombre
from stg.product_master
where ean is not null

--- 12 Mostrar todas las lineas de venta que que hayan sido vendidas 
--- entre 1 de Octubre de 2022 y 10 de Noviembre de 2022.

select *
from stg.order_line_sale
where fecha between '2022-01-01' and '2022-10-11'

---------- TAREA 2 ----------

--- 1 Cuales son los paises donde la empresa tiene tiendas?

select distinct (pais) 
from stg.store_master

--- 2 Cuantos productos por subcategoria tiene disponible para la venta?

select
	subcategoria,
	count (codigo_producto)
from stg.product_master
where is_active = 'true'
group by subcategoria

--- 3 Cuales son las ordenes de venta de Argentina de mayor a $100.000?

select orden,moneda, venta
from stg.order_line_sale
where moneda = 'ARS' and venta >'100000'

--- 4 Obtener los decuentos otorgados durante Noviembre de 2022 en cada una de las monedas?

select moneda,(sum (descuento))*-1 as descuentootorgado,date_part('month',fecha) as mes
from stg.order_line_sale
where fecha between '2022-11-01' and '2022-11-30' and descuento is not null
group by moneda,mes

--- 5 Obtener los impuestos pagados en Europa durante el 2022

SELECT moneda, SUM(impuestos) AS totalimpuestos, DATE_PART('year', fecha) AS anio
FROM stg.order_line_sale
WHERE fecha BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY moneda, anio
HAVING moneda = 'EUR';

--- 6 En cuantas ordenes se utilizaron creditos?

select count (creditos) as ordenes_creditos
from stg.order_line_sale
where creditos is not null

--- 7 Cual es el % de descuentos otorgados (sobre las ventas) por tienda?

select tienda, (sum(descuento)/sum(venta) *100)*-1 as tasa_desc
from stg.order_line_sale
group by tienda;

--- 8 Cual es el inventario promedio por dia que tiene cada tienda?

select tienda, fecha, avg(Stock_final) as inventariopromedio
from stg.inventory
group by tienda,fecha

--- 9 Obtener las ventas netas y el porcentaje de descuento otorgado por producto en Argentina

SELECT producto, moneda, sum(coalesce(venta,0) + coalesce(descuento,0) - coalesce(impuestos,0)+coalesce(creditos,0))
as ventas_netas, 
round((coalesce(sum(descuento),0)/(coalesce(sum(venta),0))),4) as descuento_por_producto 
from stg.order_line_sale 
where moneda = 'ARS' 
group by producto, moneda

--- 10 Las tablas "market_count" y "super_store_count" representan dos sistemas distintos que usa la empresa
--- para contar la cantidad de gente que ingresa a tienda, uno para las tiendas de Latinoamerica y otro para Europa.
--- Obtener en una unica tabla, las entradas a tienda de ambos sistema

select tienda,date(fecha::TEXT), conteo from stg.market_count
union all
select tienda,date(fecha::TEXT), conteo from stg.super_store_count

--- 11 Cuales son los productos disponibles para la venta (activos) de la marca Phillips?

select codigo_producto,nombre,is_active
from stg.product_master
where nombre like '%PHILIPS%' and is_active= 'true'

--- 12 Obtener el monto vendido por tienda y moneda y ordenarlo de mayor a menor por valor nominal.

select sum(venta),tienda,moneda
from stg.order_line_sale
group by tienda,moneda
order by sum(venta) desc

--- 13 Cual es el precio promedio de venta de cada producto en las distintas monedas? 
--- Recorda que los valores de venta, impuesto, descuentos y creditos es por el total de la linea.

select * from stg.order_line_Sale

select producto,moneda,
avg((coalesce(venta,0) + coalesce(descuento,0) - coalesce(impuestos,0)+coalesce(creditos,0))/cantidad) as precio_promedio
from stg.order_line_Sale
group by producto, moneda
order by producto

--- 14 Cual es la tasa de impuestos que se pago por cada orden de venta?

select orden,impuestos/venta as tasa
from stg.order_line_Sale


----- Clase 1 ------

--- 1 Cuales son los paises donde la empresa tiene tiendas?

select distinct (pais) as pais_empresa_tiene_tiendas
from stg.store_master

--- 2 Cuantos productos por subcategoria tiene disponible para la venta?

select
	subcategoria,
	count (codigo_producto)
from stg.product_master
group by subcategoria

--- 3 Cuales son las ordenes de venta de Argentina de mayor a $100.000?

select moneda, venta
from stg.order_line_sale
where moneda = 'ARS' and venta >'100000'

--- 4 Obtener los decuentos otorgados durante Noviembre de 2022 en cada una de las monedas?

select moneda, (sum (descuento))*-1 as descuentootorgado  ----Porque no puedo mostrar la fecha?
from stg.order_line_sale
where descuento is not null and fecha between '2022-11-01' and '2022-11-30' 
group by moneda

--- 5 Obtener los impuestos pagados en Europa durante el 2022

select moneda, impuestos, fecha
from stg.order_line_sale
where moneda = 'EUR' and fecha  between '2022-01-01' and '2022-12-31'

select moneda, sum(impuestos) as totimpues, 
case 
	when fecha between '2022-01-01'and '2022-12-31' then 2022 
	else 0
	end as Columna2022
from stg.order_line_sale
group by moneda,columna2022
having moneda = 'EUR' and fecha between '2022-01-01'and '2022-12-31'


--- 6 En cuantas ordenes se utilizaron creditos?

select count (creditos)
from stg.order_line_sale

--- 7 Cual es el % de descuentos otorgados (sobre las ventas) por tienda?

select tienda, sum(impuestos)/sum(venta) *100 as tasa_impuestos
from stg.order_line_sale
group by tienda;

--- 8 Cual es el inventario promedio por dia que tiene cada tienda?

select * 
from stg.inventory

select tienda, fecha, avg(Stock_final) as inventariopromedio
from stg.inventory
group by tienda,fecha

--- 9 Obtener las ventas netas y el porcentaje de descuento otorgado por producto en Argentina

select *
from stg.order_line_sale

select producto,
	sum (descuento) / sum (venta) *100 as Porcentaje_Descuento,
	sum (venta) - sum (descuento) - sum (impuestos) as ventasnetas,
	producto
from stg.order_line_sale
where moneda='ARS'
group by producto

--- 10 Las tablas "market_count" y "super_store_count" representan dos sistemas distintos que usa la empresa
--- para contar la cantidad de gente que ingresa a tienda, uno para las tiendas de Latinoamerica y otro para Europa.
--- Obtener en una unica tabla, las entradas a tienda de ambos sistema

select * 
from stg.market_count

select fecha 
from stg.market_count

select tienda,date(fecha::TEXT), conteo from stg.market_count
union all
select tienda,date(fecha::TEXT), conteo from stg.super_store_count


--- 11 Cuales son los productos disponibles para la venta (activos) de la marca Phillips?

select *
from stg.product_master
where nombre like '%PHILIPS%' and is_active= 'true'

--- 12 Obtener el monto vendido por tienda y moneda y ordenarlo de mayor a menor por valor nominal.

select sum(venta),tienda,moneda
from stg.order_line_sale
group by tienda,moneda
order by sum(venta) desc

--- 13 Cual es el precio promedio de venta de cada producto en las distintas monedas? 
--- Recorda que los valores de venta, impuesto, descuentos y creditos es por el total de la linea.

select avg (venta/cantidad) as preciopromedio, moneda,producto
from stg.order_line_Sale
group by producto,moneda

--- 14 Cual es la tasa de impuestos que se pago por cada orden de venta?

select orden , avg(impuestos/venta) as tasapromedio
from stg.order_line_Sale
group by orden


---------------------Clase 3 -----------

--- 1 Mostrar nombre y codigo de producto, categoria y color para todos los productos de la marca Philips y Samsung,
-----mostrando la leyenda "Unknown" cuando no hay un color disponible

select * 
from stg.product_master

select codigo_producto, nombre, categoria,
case when color is null then 'Unknown'
else color end as color_producto
from stg.product_master
where nombre like '%PHILIPS%' or nombre like '%Philips%' 
or nombre like '%Samsung%' or nombre like '%SAMSUNG%'

select codigo_producto, nombre, categoria, coalesce(color,'Unknown')
from stg.product_master
where nombre like '%PHILIPS%' or nombre like '%Philips%' 
or nombre like '%Samsung%' or nombre like '%SAMSUNG%'

--- 2 Calcular las ventas brutas y los impuestos pagados por pais y provincia en la moneda correspondiente.
	
select sum(ols.venta) as ventasbrutas, sum(ols.impuestos) as impuestosbrutos, sm.provincia,sm.pais,ols.moneda
from stg.order_line_sale as ols
left join stg.store_master as sm
on ols.tienda=sm.codigo_tienda
group by sm.pais, sm.provincia,ols.moneda
	
--- 3 Calcular las ventas totales por subcategoria de producto para cada moneda ordenados por subcategoria y moneda.

select * 
from stg.order_line_sale

select * 
from stg.product_master

select pm.subcategoria, sls.moneda, sum(coalesce(sls.venta,0)) as ventas_totales
from stg.product_master pm
left join stg.order_line_sale sls
on pm.codigo_producto = sls.producto
group by pm.subcategoria, sls.moneda
order by pm.subcategoria, sls.moneda

--- 4 Calcular las unidades vendidas por subcategoria de producto y la concatenacion de pais, provincia;
---   usar guion como separador y usarla para ordernar el resultado.

select pm.subcategoria,concat_ws('-',sm.provincia,sm.pais) as provinciapais,sum(coalesce(ols.cantidad,0)) as sumcantidad
from stg.order_line_sale as ols
left join stg.product_master as pm
on ols.producto= pm.codigo_producto
left join stg.store_master as sm
on ols.tienda=sm.codigo_tienda
group by pm.subcategoria,provinciapais
order by provinciapais

--- 5 Mostrar una vista donde se vea el nombre de tienda y la cantidad de entradas de personas que hubo 
---   desde la fecha de apertura para el sistema "super_store".

select *
from stg.super_store_count

select * 
from stg.store_master

select tienda,sm.nombre,sum(conteo) as totaldeentradas
from stg.super_store_count as ssc
left join stg.store_master as sm
on ssc.tienda=sm.codigo_tienda
group by ssc.tienda, sm,nombre
order by tienda

create view entradas_de_personas_por_tienda as 
select sm.codigo_tienda, sm.nombre, sm.fecha_apertura, sum(coalesce(conteo,0)) as cantidad_de_entradas_de_personas
from stg.store_master sm
left join stg.super_store_count ssc
on sm.codigo_tienda = ssc.tienda
group by sm.codigo_tienda, sm.nombre, sm.fecha_apertura
order by sum(coalesce(conteo,0)) desc

select * from entradas_de_personas_por_tienda

--- 6 Cual es el nivel de inventario promedio en cada mes a nivel de codigo de producto y tienda; 
----  mostrar el resultado con el nombre de la tienda.

select * 
from stg.inventory

select * 
from stg.store_master

select * 
from stg.product_master

select i.sku,sm.nombre, date_part('month',fecha) as mes,avg(i.stock_final) as inventariopromedio
from stg.inventory as i
left join stg.store_master as sm
on i.tienda = sm.codigo_tienda
left join stg.product_master as pm
on i.sku=pm.codigo_producto
group by i.sku,sm.nombre, date_part('month',fecha)
order by sm.nombre

--- 7 Calcular la cantidad de unidades vendidas por material. Para los productos que no tengan material usar
----  'Unknown', homogeneizar los textos si es necesario.

select distinct(material)
from stg.product_master

update stg.product_master
set material = 'Plastico'
where material = 'plastico'

update stg.product_master
set material = 'Plastico'
where material = 'PLASTICO'

update stg.product_master
set material = 'Unknown'
where material is null

select pm.material, sum(ols.cantidad) as cantunidadesvendidas
from stg.product_master as pm
left join stg.order_line_sale as ols
on pm.codigo_producto = ols.producto
group by pm.material

with material as (

SELECT 
	*,
    CASE WHEN material IS NULL THEN 'Unknown'
    when material = 'PLASTICO' THEN 'Plastico'
    when material = 'plastico' THEN 'Plastico'
    ELSE material END as material_consolidado
FROM stg.order_line_sale AS OLS
LEFT JOIN stg.product_master AS PM
    ON OLS.producto = PM.codigo_producto
)		

select material_consolidado, sum(cantidad)
from material
group by material_consolidado

--- 8 Mostrar la tabla order_line_sales agregando una columna que represente el valor de venta bruta en cada linea 
----  convertido a dolares usando la tabla de tipo de cambio.

select *,date_part('month',mes) from stg.monthly_average_fx_rate;
select  *, date_part('month',fecha) as mes_de_venta from stg.order_line_sale;

select ols.*,
(ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) as venta_en_dolares
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)



--- 9 Calcular cantidad de ventas totales de la empresa en dolares.

select 
sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)))  as ventatotalendolares
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)

---- 10 Mostrar en la tabla de ventas el margen de venta por cada linea. Siendo margen = (venta - promociones) - costo
----    expresado en dolares.

select ols.*,(ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) as ventaendolares,
(ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) as impuestoendolares,
co.costo_promedio_usd,
(ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd as Margen
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto

--- 11 Calcular la cantidad de items distintos de cada subsubcategoria que se llevan por numero de orden.

select pm.subsubcategoria, ols.orden,sum(ols.cantidad) as cantidad_de_items
from stg.order_line_sale as ols
left join stg.product_master as pm
on ols.producto = pm.codigo_producto
group by subsubcategoria,orden


------- CLASE 4 ---------

--- 1 Crear un backup de la tabla product_master. Utilizar un esquema llamada "bkp" y agregar un prefijo al nombre
----  de la tabla con la fecha del backup en forma de numero entero.

create schema bkp

select *, current_date as backupdate
into bkp.product_master_02042023
from stg.product_master

--- 2 Hacer un update a la nueva tabla (creada en el punto anterior) de product_master agregando la leyendo "N/A" 
----  para los valores null de material y color. Pueden utilizarse dos sentencias.
select * from bkp.product_master_02042023

update bkp.product_master_02042023
set material = 'N/A'
where material is null

update bkp.product_master_02042023
set color = 'N/A'
where material is null

--- 3 Hacer un update a la tabla del punto anterior, actualizando la columa "is_active", desactivando todos los 
--- productos en la subsubcategoria "Control Remoto".

update bkp.product_master_02042023
set is_active = 'false'
where subsubcategoria is 'Control Remoto'


---- 4 Agregar una nueva columna a la tabla anterior llamada "is_local" indicando los productos producidos en Argentina
------  y fuera de Argentina.

ALTER TABLE bkp.product_master_02042023 ADD is_local varchar(20);
UPDATE bkp.product_master_02042023 SET is_local = 'Si' WHERE origen= 'Argentina'
UPDATE bkp.product_master_02042023 SET is_local = 'No' WHERE origen!= 'Argentina'

--- 5 Agregar una nueva columna a la tabla de ventas llamada "line_key" que resulte ser la concatenacion de el numero
----  de orden y el codigo de producto.

select * from stg.order_line_sale

alter table stg.order_line_sale ADD line_key varchar(20)
UPDATE stg.order_line_sale SET line_key = concat('-',orden,producto) 


--- 6 Eliminar todos los valores de la tabla "order_line_sale" para el POS 1.

DELETE FROM stg.order_line_sale WHERE pos=1

--- 7 Crear una tabla llamada "employees" (por el momento vacia) que tenga un id (creado de forma incremental), nombre,
----  apellido, fecha de entrada, fecha salida, telefono, pais, provincia, codigo_tienda, posicion. 
----   Decidir cual es el tipo de dato mas acorde.

create table stg.employees(
	    id SERIAL PRIMARY KEY,
		nombre varchar(30),
		apellido varchar(30),
		fechadeentrada date,
		fechadesalida date,
		telefono varchar(50),
		pais varchar(40),
		provincia varchar(40),
		codigo_tienda varchar(10),
		posicion varchar(40));

--- 8 Insertar nuevos valores a la tabla "employees" para los siguientes 4 empleados:
--Juan Perez, 2022-01-01, telefono +541113869867, Argentina, Santa Fe, tienda 2, Vendedor.
--Catalina Garcia, 2022-03-01, Argentina, Buenos Aires, tienda 2, Representante Comercial
--Ana Valdez, desde 2020-02-21 hasta 2022-03-01, España, Madrid, tienda 8, Jefe Logistica
--Fernando Moralez, 2022-04-04, España, Valencia, tienda 9, Vendedor.

insert into stg.employees (nombre,apellido,fechadeentrada,telefono,pais,provincia,codigo_tienda,posicion) values 
('Juan', 'Perez', '2022-01-01', +541113869867, 'Argentina', 'Santa Fe', 2, 'Vendedor')

insert into stg.employees (nombre,apellido,fechadeentrada,pais,provincia,codigo_tienda,posicion) values 
('Catalina', 'Garcia', '2022-03-01', 'Argentina', 'Buenos Aires', 2, 'Representante Comercial')

insert into stg.employees (nombre,apellido,fechadeentrada,fechadesalida,pais,provincia,codigo_tienda,posicion) values 
('Ana', 'Valdez', '2022-02-21', '2022-03-01', 'Espana', 'Madrid', 8, 'Jefe Logistica')

insert into stg.employees (nombre,apellido,fechadeentrada,pais,provincia,codigo_tienda,posicion) values 
('Fernando', 'Moralez', '2022-04-04', 'Espana', 'Valencia', 9, 'Vendedor')

Luego de un tiempo de haber respondido todas las preguntas puntuales por los gerentes, la empresa decide ampliar el 
contrato para mejorar las bases de reporte de datos. Para esto quiere definir una serie de KPIs 
(Key Performance Indicator) que midan la salud de la empresa en diversas areas y ademas mostrar el valor actual y 
la evolucion en el tiempo.

Por cada KPI listado vamos a tener que generar al menos una query (pueden ser mas de una) que nos devuelva el valor 
del KPI en cada mes, mostrando el resultado para todos los meses disponibles.

Todos los valores monetarios deben ser calculados en dolares usando el tipo de cambio promedio mensual.

El objetivo no es solo encontrar la query que responda la metrica sino entender que datos necesitamos, que es lo que 
significa y como armar el KPI General

    Ventas brutas, netas y margen
    Margen por categoria de producto
    ROI por categoria de producto. ROI = Valor promedio de inventario / ventas netas
    AOV (Average order value), valor promedio de la orden.

Contabilidad

    Impuestos pagados
    Tasa de impuesto. Impuestos / Ventas netas
    Cantidad de creditos otorgados
    Valor pagado final por order de linea. Valor pagado: Venta - descuento + impuesto - credito

Supply Chain

    Costo de inventario promedio por tienda
    Costo del stock de productos que no se vendieron por tienda
    Cantidad y costo de devoluciones

Tiendas

    Ratio de conversion. Cantidad de ordenes generadas / Cantidad de gente que entra

Por otro lado tambien necesitamos crear y subir a nuestra DB la tabla "return_movements" para poder utilizarla en 
la segunda parte.

--- KPI1 VENTAS BRUTAS ---

select * 
from stg.order_line_sale

select date_part('month',ols.fecha) as mes,
sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)))  as VENTABRUTAENDOLARES
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
group by date_part('month',ols.fecha)

--- KPI2 VENTAS NETAS = Ventas Brutas  - Descuentos

select date_part('month',ols.fecha) as mes,sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
))  - (ols.descuento/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
))) as VENTASNETAS
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
group by date_part('month',ols.fecha)

--- KPI3 MARGEN = Ventas netas  - Costo

select date_part('month',ols.fecha) as mes,sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd) as Margen
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
group by date_part('month',ols.fecha)

---KPI4 Margen por Categoria de Producto

select * from stg.product_master

select date_part('month',ols.fecha) as mes,
sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd) as Margen,pm.subcategoria
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
left join stg.product_master as pm
on ols.producto = pm.codigo_producto
group by pm.subcategoria,date_part('month',ols.fecha)

--- KP5 ROI por categoria de producto. ROI = Valor promedio de inventario / ventas netas

select * from stg.inventory

select * --sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
--when ols.moneda = 'URU' then maver.cotizacion_usd_uru
--else maver.cotizacion_usd_eur end
--)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
--when ols.moneda = 'URU' then maver.cotizacion_usd_uru
--else maver.cotizacion_usd_eur end
--)) - (ols.descuento/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
--when ols.moneda = 'URU' then maver.cotizacion_usd_uru
--else maver.cotizacion_usd_eur end
--)) - (ols.creditos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
--when ols.moneda = 'URU' then maver.cotizacion_usd_uru
--else maver.cotizacion_usd_eur end
--)))  as VENTASNETAS
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
left join stg.inventory as i
on ols.producto=i.sku

--- KPI6 Impuestos pagados

select date_part('month',ols.fecha) as mes,
-1*sum((ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd) as IMPUESTOSPAGADOS
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
left join stg.product_master as pm
on ols.producto = pm.codigo_producto
group by date_part('month',ols.fecha)

---KPI7 Tasa de impuesto. Impuestos / Ventas netas

select date_part('month',ols.fecha) as mes,
-1*sum((ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd)/
sum((ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.descuento/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.creditos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)))  as TASADEIMPUESTO
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto
group by date_part('month',ols.fecha)

--- KPI8 Cantidad de creditos otorgados

select date_part('month',fecha) as mes,count(creditos) as Cantidad_de_Creditos_Ortogados
from stg.order_line_sale
group by date_part('month',fecha)

--- KPI9 Valor pagado final por order de linea. Valor pagado: Venta - descuento + impuesto - credito
??????????????????????????
select * , venta - descuento + impuestos - creditos as VALORPAGADO ????????????????????????????
from stg.order_line_sale

--- 9 Crear un backup de la tabla "cost" agregandole una columna que se llame "last_updated_ts" que sea el momento
----  exacto en el cual estemos realizando el backup en formato datetime.

select *, current_date as backup_date 
into bkp.cost_20220405
from stg.cost

select * from bkp.cost_20220405

--- 10 El cambio en la tabla "order_line_sale" en el punto 6 fue un error y debemos volver la tabla a su estado 
--- original, como lo harias?

----CLASE 6----

1 --Crear una vista con el resultado del ejercicio de la Parte 1 - Clase 2 - Ejercicio 10, donde unimos la cantidad 
----de gente que ingresa a tienda usando los dos sistemas.

create or replace view stg.Ej2clase10 as select tienda,date(fecha::TEXT), conteo from stg.market_count
union all
select tienda,date(fecha::TEXT), conteo from stg.super_store_count

2 --- Recibimos otro archivo con ingresos a tiendas de meses anteriores. Ingestar el archivo y agregarlo a la vista 
---del ejercicio anterior (Ejercicio 1 Clase 6). Cual hubiese sido la diferencia si hubiesemos tenido una tabla? 
---(contestar la ultima pregunta con un texto escrito en forma de comentario)

-- View: stg.ej2clase10

-- DROP VIEW stg.ej2clase10;

CREATE OR REPLACE VIEW stg.ej2clase10
 AS
 SELECT market_count.tienda,
    market_count.fecha::text::date AS date,
    market_count.conteo
   FROM stg.market_count
UNION ALL
 SELECT super_store_count.tienda,
    super_store_count.fecha::text::date AS date,
    super_store_count.conteo
   FROM stg.super_store_count
UNION ALL
 SELECT super_store_count_september.tienda,
    super_store_count_september.fecha::text::date AS date,
    super_store_count_september.conteo
   FROM stg.super_store_count_september;
ALTER TABLE stg.ej2clase10
    OWNER TO postgres;

--- 3 Crear una vista con el resultado del ejercicio de la Parte 1 - Clase 3 - Ejercicio 10, donde calculamos el 7
--- margen bruto en dolares. Agregarle la columna de ventas, descuentos, y creditos en dolares para poder reutilizarla
---en un futuro.

select * from stg.Margenonly

create or replace view stg.Margenonly as select  
(ols.venta/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - (ols.impuestos/(case when ols.moneda = 'ARS' then maver.cotizacion_usd_peso
when ols.moneda = 'URU' then maver.cotizacion_usd_uru
else maver.cotizacion_usd_eur end
)) - co.costo_promedio_usd as Margen
from stg.order_line_sale ols
inner join stg.monthly_average_fx_rate maver
on date_part('month',ols.fecha) = date_part('month',maver.mes)
left join stg.cost co
on ols.producto = co.codigo_producto

-- View: stg.margenonly

-- DROP VIEW stg.margenonly;

CREATE OR REPLACE VIEW stg.margenonly
 AS
 SELECT ols.venta /
        CASE
            WHEN ols.moneda::text = 'ARS'::text THEN maver.cotizacion_usd_peso
            WHEN ols.moneda::text = 'URU'::text THEN maver.cotizacion_usd_uru
            ELSE maver.cotizacion_usd_eur
        END - ols.impuestos /
        CASE
            WHEN ols.moneda::text = 'ARS'::text THEN maver.cotizacion_usd_peso
            WHEN ols.moneda::text = 'URU'::text THEN maver.cotizacion_usd_uru
            ELSE maver.cotizacion_usd_eur
        END - co.costo_promedio_usd AS margen,
		ols.venta /
        CASE
            WHEN ols.moneda::text = 'ARS'::text THEN maver.cotizacion_usd_peso
            WHEN ols.moneda::text = 'URU'::text THEN maver.cotizacion_usd_uru
            ELSE maver.cotizacion_usd_eur
        END AS ventaendolares,
		ols.impuestos /
        CASE
            WHEN ols.moneda::text = 'ARS'::text THEN maver.cotizacion_usd_peso
            WHEN ols.moneda::text = 'URU'::text THEN maver.cotizacion_usd_uru
            ELSE maver.cotizacion_usd_eur
        END as Impendolares
   FROM stg.order_line_sale ols
     JOIN stg.monthly_average_fx_rate maver ON date_part('month'::text, ols.fecha) = date_part('month'::text, maver.mes)
     LEFT JOIN stg.cost co ON ols.producto::text = co.codigo_producto::text;

ALTER TABLE stg.margenonly
    OWNER TO postgres;

--- 4 Generar una query que me sirva para verificar que el nivel de agregacion de la tabla de ventas (y de la vista) 
--- no se haya afectado. Recordas que es el nivel de agregacion/detalle? Lo vimos en la teoria de la parte 1! 
--- Nota: La orden M999000061 parece tener un problema verdad? Lo vamos a solucionar mas adelante.

select codigo_producto,count(1)
from stg.product_master
group by codigo_producto
having count(1)>1


--- 5 Calcular el margen bruto a nivel Subcategoria de producto. Usar la vista creada.

select pm.subcategoria,sum(mo.margen) as Margen
from stg.margenonly as mo
left join stg.product_master as pm
on mo.producto=pm.codigo_producto
group by pm.subcategoria

Calcular la contribucion de las ventas brutas de cada producto al total de la orden. Por esta vez, si necesitas usar una subquery, podes utilizarla.
Calcular las ventas por proveedor, para eso cargar la tabla de proveedores por producto. Agregar el nombre el proveedor en la vista del punto 3.
Verificar que el nivel de detalle de la vista anterior no se haya modificado, en caso contrario que se deberia ajustar? Que decision tomarias para que no se genereren duplicados?

    Se pide correr la query de validacion.
    Crear una nueva query que no genere duplicacion.
    Explicar brevemente (con palabras escrito tipo comentario) que es lo que sucedia
